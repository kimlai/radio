var _user$project$TimeAgo$timeAgo = F2(
	function (currentTime, date) {
		var _p0 = currentTime;
		if (_p0.ctor === 'Nothing') {
			return '';
		} else {
			var inUnitAgo = F2(
				function (value, _p1) {
					var _p2 = _p1;
					var pluralize = F2(
						function (value, string) {
							return (_elm_lang$core$Native_Utils.cmp(value, 1) > 0) ? A2(_elm_lang$core$Basics_ops['++'], string, 's') : A2(_elm_lang$core$Basics_ops['++'], string, '');
						});
					var valueInUnit = _elm_lang$core$Basics$floor(value / _p2._1);
					return _elm_lang$core$Native_Utils.eq(valueInUnit, 0) ? _elm_lang$core$Maybe$Nothing : _elm_lang$core$Maybe$Just(
						A2(
							_elm_lang$core$Basics_ops['++'],
							_elm_lang$core$Basics$toString(valueInUnit),
							A2(
								_elm_lang$core$Basics_ops['++'],
								' ',
								A2(
									_elm_lang$core$Basics_ops['++'],
									A2(pluralize, valueInUnit, _p2._0),
									' ago'))));
				});
			var day = 24 * _elm_lang$core$Time$hour;
			var week = 7 * day;
			var month = 30 * day;
			var year = 365 * day;
			var timeAgo = _p0._0 - _elm_lang$core$Date$toTime(date);
			return A2(
				_elm_lang$core$Maybe$withDefault,
				'Just now',
				_elm_lang$core$List$head(
					A2(
						_elm_lang$core$List$filterMap,
						inUnitAgo(timeAgo),
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'year', _1: year},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'month', _1: month},
								_1: {
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'week', _1: week},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'day', _1: day},
										_1: {
											ctor: '::',
											_0: {ctor: '_Tuple2', _0: 'hour', _1: _elm_lang$core$Time$hour},
											_1: {
												ctor: '::',
												_0: {ctor: '_Tuple2', _0: 'minute', _1: _elm_lang$core$Time$minute},
												_1: {ctor: '[]'}
											}
										}
									}
								}
							}
						})));
		}
	});
