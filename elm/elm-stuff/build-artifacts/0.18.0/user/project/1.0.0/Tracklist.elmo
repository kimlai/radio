var _user$project$Tracklist$getTracksWithPosition = F2(
	function (ids, _p0) {
		var _p1 = _p0;
		return A2(
			_elm_lang$core$List$filterMap,
			function (_p2) {
				var _p3 = _p2;
				return A2(
					_elm_lang$core$Maybe$map,
					function (track) {
						return {ctor: '_Tuple2', _0: _p3._0, _1: track};
					},
					A2(_elm_lang$core$Dict$get, _p3._1, _p1._0));
			},
			ids);
	});
var _user$project$Tracklist$getTracks = F2(
	function (ids, _p4) {
		var _p5 = _p4;
		return A2(
			_elm_lang$core$List$filterMap,
			function (trackId) {
				return A2(_elm_lang$core$Dict$get, trackId, _p5._0);
			},
			ids);
	});
var _user$project$Tracklist$get = F2(
	function (trackId, _p6) {
		var _p7 = _p6;
		return A2(_elm_lang$core$Dict$get, trackId, _p7._0);
	});
var _user$project$Tracklist$Tracklist = function (a) {
	return {ctor: 'Tracklist', _0: a};
};
var _user$project$Tracklist$empty = _user$project$Tracklist$Tracklist(_elm_lang$core$Dict$empty);
var _user$project$Tracklist$add = F2(
	function (newTracks, _p8) {
		var _p9 = _p8;
		return _user$project$Tracklist$Tracklist(
			A2(
				_elm_lang$core$Dict$union,
				_p9._0,
				_elm_lang$core$Dict$fromList(
					A2(
						_elm_lang$core$List$map,
						function (track) {
							return {ctor: '_Tuple2', _0: track.id, _1: track};
						},
						newTracks))));
	});
var _user$project$Tracklist$update = F3(
	function (trackId, fn, _p10) {
		var _p11 = _p10;
		return _user$project$Tracklist$Tracklist(
			A3(
				_elm_lang$core$Dict$update,
				trackId,
				_elm_lang$core$Maybe$map(fn),
				_p11._0));
	});
