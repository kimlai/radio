var _user$project$Radio_View$viewMoreButton = function (playlistId) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$class('view-more'),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					A2(_user$project$Radio_Update$FetchMore, playlistId, false)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('More'),
			_1: {ctor: '[]'}
		});
};
var _user$project$Radio_View$viewTrackPlaceHolder = A2(
	_elm_lang$html$Html$div,
	{
		ctor: '::',
		_0: _elm_lang$html$Html_Attributes$class('latest-track'),
		_1: {ctor: '[]'}
	},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('track-info-container'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('cover'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$img,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$src('/images/placeholder.jpg'),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('progress-bar'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('outer'),
									_1: {ctor: '[]'}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			}),
		_1: {ctor: '[]'}
	});
var _user$project$Radio_View$viewTrack = F5(
	function (currentTrackId, currentTime, playlistId, position, track) {
		var source = function () {
			var _p0 = track.streamingInfo;
			if (_p0.ctor === 'Soundcloud') {
				return 'Soundcloud';
			} else {
				return 'Youtube';
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'latest-track', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'error', _1: track.error},
							_1: {
								ctor: '::',
								_0: {
									ctor: '_Tuple2',
									_0: 'selected',
									_1: _elm_lang$core$Native_Utils.eq(
										currentTrackId,
										_elm_lang$core$Maybe$Just(track.id))
								},
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('track-info-container'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('cover'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										A2(_user$project$Radio_Update$PlayFromPlaylist, playlistId, position)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$img,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$src(
											A4(
												_elm_lang$core$Regex$replace,
												_elm_lang$core$Regex$All,
												_elm_lang$core$Regex$regex('large'),
												function (_p1) {
													return 't200x200';
												},
												track.artwork_url)),
										_1: {ctor: '[]'}
									},
									{ctor: '[]'}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(_user$project$View$viewProgressBar, _user$project$Radio_Update$SeekTo, track),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('track-info'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$div,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('artist'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text(track.artist),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$div,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('title'),
															_1: {ctor: '[]'}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text(track.title),
															_1: {ctor: '[]'}
														}),
													_1: {
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$a,
															{
																ctor: '::',
																_0: _elm_lang$html$Html_Attributes$class('source'),
																_1: {
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$target('_blank'),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$href(track.sourceUrl),
																		_1: {ctor: '[]'}
																	}
																}
															},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text(source),
																_1: {ctor: '[]'}
															}),
														_1: {ctor: '[]'}
													}
												}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Radio_View$viewLatestTracks = F5(
	function (currentTrackId, currentTime, tracks, playlist, playlistContent) {
		var moreButton = function () {
			var _p2 = playlist.nextLink;
			if (_p2.ctor === 'Just') {
				return _user$project$Radio_View$viewMoreButton(playlist.id);
			} else {
				return _elm_lang$html$Html$text('');
			}
		}();
		var placeholders = _elm_lang$core$Native_Utils.eq(playlist.status, _user$project$Radio_Model$Fetching) ? A2(_elm_lang$core$List$repeat, 10, _user$project$Radio_View$viewTrackPlaceHolder) : {ctor: '[]'};
		var playlistTracks = A2(_user$project$Tracklist$getTracks, playlistContent, tracks);
		var tracksView = A2(
			_elm_lang$core$List$indexedMap,
			A3(_user$project$Radio_View$viewTrack, currentTrackId, currentTime, playlist.id),
			playlistTracks);
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('latest-tracks'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('content'),
						_1: {ctor: '[]'}
					},
					A2(_elm_lang$core$List$append, tracksView, placeholders)),
				_1: {
					ctor: '::',
					_0: moreButton,
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Radio_View$viewRadioPlaylistTrack = F3(
	function (currentTrackId, position, track) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					A2(_user$project$Radio_Update$PlayFromPlaylist, _user$project$Radio_Model$Radio, position)),
				_1: {
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$classList(
						{
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'track-info-container', _1: true},
							_1: {
								ctor: '::',
								_0: {ctor: '_Tuple2', _0: 'error', _1: track.error},
								_1: {
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'selected',
										_1: _elm_lang$core$Native_Utils.eq(
											currentTrackId,
											_elm_lang$core$Maybe$Just(track.id))
									},
									_1: {ctor: '[]'}
								}
							}
						}),
					_1: {ctor: '[]'}
				}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('cover'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$img,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$src(
									A4(
										_elm_lang$core$Regex$replace,
										_elm_lang$core$Regex$All,
										_elm_lang$core$Regex$regex('large'),
										function (_p3) {
											return 't200x200';
										},
										track.artwork_url)),
								_1: {ctor: '[]'}
							},
							{ctor: '[]'}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('track-info'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('title'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(track.title),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('artist'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(
													A2(_elm_lang$core$Basics_ops['++'], 'by ', track.artist)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Radio_View$viewRadioPlaylist = F4(
	function (showRadioPlaylist, currentTrackId, tracks, playlistContent) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$classList(
					{
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'radio-playlist', _1: true},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'visible', _1: showRadioPlaylist},
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			},
			A2(
				_elm_lang$core$List$indexedMap,
				_user$project$Radio_View$viewRadioPlaylistTrack(currentTrackId),
				A2(_user$project$Tracklist$getTracks, playlistContent, tracks)));
	});
var _user$project$Radio_View$viewUpcomingTrack = F2(
	function (playlistId, _p4) {
		var _p5 = _p4;
		var _p7 = _p5._1;
		return A2(
			_elm_lang$html$Html$tr,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('play'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(
										A2(_user$project$Radio_Update$PlayFromPlaylist, playlistId, _p5._0)),
									_1: {ctor: '[]'}
								}
							},
							{
								ctor: '::',
								_0: _user$project$Icons$play,
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{ctor: '[]'}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('cover'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$img,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$src(
													A4(
														_elm_lang$core$Regex$replace,
														_elm_lang$core$Regex$All,
														_elm_lang$core$Regex$regex('large'),
														function (_p6) {
															return 't200x200';
														},
														_p7.artwork_url)),
												_1: {ctor: '[]'}
											},
											{ctor: '[]'}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('title'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(_p7.title),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$td,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('artist'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(_p7.artist),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}
			});
	});
var _user$project$Radio_View$viewUpcomingTracks = F4(
	function (currentPage, tracks, playlistId, upcomingTracks) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('queues'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('nav'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$classList(
									{
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'active',
											_1: _elm_lang$core$Native_Utils.eq(currentPage, _user$project$Radio_Model$UpNextPage)
										},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A4(
									_user$project$Html_Extra$link,
									_user$project$Radio_Update$FollowLink,
									'/queue/next',
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Up Next'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$li,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$classList(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'active',
												_1: _elm_lang$core$Native_Utils.eq(currentPage, _user$project$Radio_Model$PlayedPage)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A4(
										_user$project$Html_Extra$link,
										_user$project$Radio_Update$FollowLink,
										'/queue/played',
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Played'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$table,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('played-tracks'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$thead,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$th,
										{ctor: '[]'},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Title'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Artist'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tbody,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										_user$project$Radio_View$viewUpcomingTrack(playlistId),
										A2(_user$project$Tracklist$getTracksWithPosition, upcomingTracks, tracks))),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Radio_View$viewPlayedTrack = function (track) {
	return A2(
		_elm_lang$html$Html$tr,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$td,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('play'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(
									_user$project$Radio_Update$PlayOutsidePlaylist(track.id)),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _user$project$Icons$play,
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$td,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$td,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('cover'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$img,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$src(
												A4(
													_elm_lang$core$Regex$replace,
													_elm_lang$core$Regex$All,
													_elm_lang$core$Regex$regex('large'),
													function (_p8) {
														return 't200x200';
													},
													track.artwork_url)),
											_1: {ctor: '[]'}
										},
										{ctor: '[]'}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$td,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('title'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text(track.title),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$td,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$div,
										{
											ctor: '::',
											_0: _elm_lang$html$Html_Attributes$class('artist'),
											_1: {ctor: '[]'}
										},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text(track.artist),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
var _user$project$Radio_View$viewPlayedTracks = F3(
	function (currentPage, tracks, playedTracks) {
		return A2(
			_elm_lang$html$Html$div,
			{
				ctor: '::',
				_0: _elm_lang$html$Html_Attributes$class('queues'),
				_1: {ctor: '[]'}
			},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('nav'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$classList(
									{
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'active',
											_1: _elm_lang$core$Native_Utils.eq(currentPage, _user$project$Radio_Model$UpNextPage)
										},
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A4(
									_user$project$Html_Extra$link,
									_user$project$Radio_Update$FollowLink,
									'/queue/next',
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('Up Next'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$li,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$classList(
										{
											ctor: '::',
											_0: {
												ctor: '_Tuple2',
												_0: 'active',
												_1: _elm_lang$core$Native_Utils.eq(currentPage, _user$project$Radio_Model$PlayedPage)
											},
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: A4(
										_user$project$Html_Extra$link,
										_user$project$Radio_Update$FollowLink,
										'/queue/played',
										{ctor: '[]'},
										{
											ctor: '::',
											_0: _elm_lang$html$Html$text('Played'),
											_1: {ctor: '[]'}
										}),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {
					ctor: '::',
					_0: _elm_lang$core$List$isEmpty(playedTracks) ? A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('empty-played-tracks'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$h2,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('Empty'),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$p,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: _elm_lang$html$Html$text('No tracks have been played yet'),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}) : A2(
						_elm_lang$html$Html$table,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('played-tracks'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$thead,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$th,
										{ctor: '[]'},
										{ctor: '[]'}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$th,
											{ctor: '[]'},
											{ctor: '[]'}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$th,
												{ctor: '[]'},
												{ctor: '[]'}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$th,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('Title'),
														_1: {ctor: '[]'}
													}),
												_1: {
													ctor: '::',
													_0: A2(
														_elm_lang$html$Html$th,
														{ctor: '[]'},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Artist'),
															_1: {ctor: '[]'}
														}),
													_1: {ctor: '[]'}
												}
											}
										}
									}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$tbody,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										_user$project$Radio_View$viewPlayedTrack,
										A2(_user$project$Tracklist$getTracks, playedTracks, tracks))),
								_1: {ctor: '[]'}
							}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Radio_View$viewRadioTrack = F2(
	function (track, currentPlaylist) {
		var _p9 = track;
		if (_p9.ctor === 'Nothing') {
			return A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(''),
					_1: {ctor: '[]'}
				});
		} else {
			var _p12 = _p9._0;
			var source = function () {
				var _p10 = _p12.streamingInfo;
				if (_p10.ctor === 'Soundcloud') {
					return 'Soundcloud';
				} else {
					return 'Youtube';
				}
			}();
			return A2(
				_elm_lang$html$Html$div,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('radio-track'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$class('radio-cover'),
							_1: {ctor: '[]'}
						},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$img,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('cover'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$src(
											A4(
												_elm_lang$core$Regex$replace,
												_elm_lang$core$Regex$All,
												_elm_lang$core$Regex$regex('large'),
												function (_p11) {
													return 't500x500';
												},
												_p12.artwork_url)),
										_1: {ctor: '[]'}
									}
								},
								{ctor: '[]'}),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$class('track-info-wrapper'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$div,
									{
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$class('track-info'),
										_1: {ctor: '[]'}
									},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$div,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$class('title'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text(_p12.title),
												_1: {ctor: '[]'}
											}),
										_1: {
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$class('artist'),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(
														A2(_elm_lang$core$Basics_ops['++'], 'by ', _p12.artist)),
													_1: {ctor: '[]'}
												}),
											_1: {
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$div,
													{
														ctor: '::',
														_0: _elm_lang$html$Html_Attributes$class('source'),
														_1: {ctor: '[]'}
													},
													{
														ctor: '::',
														_0: A2(
															_elm_lang$html$Html$span,
															{ctor: '[]'},
															{
																ctor: '::',
																_0: _elm_lang$html$Html$text('on '),
																_1: {ctor: '[]'}
															}),
														_1: {
															ctor: '::',
															_0: A2(
																_elm_lang$html$Html$a,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$href(_p12.sourceUrl),
																	_1: {
																		ctor: '::',
																		_0: _elm_lang$html$Html_Attributes$target('_blank'),
																		_1: {ctor: '[]'}
																	}
																},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(source),
																	_1: {ctor: '[]'}
																}),
															_1: {ctor: '[]'}
														}
													}),
												_1: {
													ctor: '::',
													_0: (!_elm_lang$core$Native_Utils.eq(
														currentPlaylist,
														_elm_lang$core$Maybe$Just(_user$project$Radio_Model$Radio))) ? A2(
														_elm_lang$html$Html$div,
														{
															ctor: '::',
															_0: _elm_lang$html$Html_Attributes$class('resume-radio'),
															_1: {
																ctor: '::',
																_0: _elm_lang$html$Html_Events$onClick(_user$project$Radio_Update$ResumeRadio),
																_1: {ctor: '[]'}
															}
														},
														{
															ctor: '::',
															_0: _elm_lang$html$Html$text('Resume Radio'),
															_1: {ctor: '[]'}
														}) : A2(
														_elm_lang$html$Html$div,
														{ctor: '[]'},
														{ctor: '[]'}),
													_1: {ctor: '[]'}
												}
											}
										}
									}),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}
				});
		}
	});
var _user$project$Radio_View$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A6(
				_user$project$View$viewGlobalPlayer,
				_user$project$Radio_Update$FollowLink,
				_user$project$Radio_Update$TogglePlayback,
				_user$project$Radio_Update$Next,
				_user$project$Radio_Update$SeekTo,
				_user$project$Radio_Model$currentTrack(model),
				model.playing),
			_1: {
				ctor: '::',
				_0: A4(
					_user$project$View$viewNavigation,
					_user$project$Radio_Update$FollowLink,
					model.navigation,
					model.currentPage,
					_user$project$Player$currentPlaylist(model.player)),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$div,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$classList(
								{
									ctor: '::',
									_0: {ctor: '_Tuple2', _0: 'radio-playlist-overlay', _1: true},
									_1: {
										ctor: '::',
										_0: {ctor: '_Tuple2', _0: 'visible', _1: model.showRadioPlaylist},
										_1: {ctor: '[]'}
									}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onClick(_user$project$Radio_Update$ToggleRadioPlaylist),
								_1: {ctor: '[]'}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(''),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A4(
							_user$project$Radio_View$viewRadioPlaylist,
							model.showRadioPlaylist,
							_user$project$Player$currentTrack(model.player),
							model.tracks,
							A2(_user$project$Player$playlistContent, _user$project$Radio_Model$Radio, model.player)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$class('main'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: function () {
										var _p13 = model.currentPage;
										switch (_p13.ctor) {
											case 'RadioPage':
												var currentRadioTrack = A2(
													_elm_lang$core$Maybe$andThen,
													A2(_elm_lang$core$Basics$flip, _user$project$Tracklist$get, model.tracks),
													A2(_user$project$Player$currentTrackOfPlaylist, _user$project$Radio_Model$Radio, model.player));
												return A2(
													_elm_lang$html$Html$div,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: A2(
															_user$project$Radio_View$viewRadioTrack,
															currentRadioTrack,
															_user$project$Player$currentPlaylist(model.player)),
														_1: {ctor: '[]'}
													});
											case 'PlayedPage':
												return A3(
													_user$project$Radio_View$viewPlayedTracks,
													model.currentPage,
													model.tracks,
													A2(_elm_lang$core$List$drop, 1, model.played));
											case 'UpNextPage':
												var playlist = A2(
													_elm_lang$core$Maybe$withDefault,
													_user$project$Radio_Model$Radio,
													_user$project$Player$currentPlaylist(model.player));
												return A4(
													_user$project$Radio_View$viewUpcomingTracks,
													model.currentPage,
													model.tracks,
													playlist,
													A2(_user$project$Player$upcoming, playlist, model.player));
											case 'LatestTracksPage':
												return A5(
													_user$project$Radio_View$viewLatestTracks,
													_user$project$Player$currentTrack(model.player),
													model.currentTime,
													model.tracks,
													model.latestTracks,
													A2(_user$project$Player$playlistContent, _user$project$Radio_Model$LatestTracks, model.player));
											default:
												return A2(
													_elm_lang$html$Html$div,
													{ctor: '[]'},
													{
														ctor: '::',
														_0: _elm_lang$html$Html$text('404'),
														_1: {ctor: '[]'}
													});
										}
									}(),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					}
				}
			}
		});
};
